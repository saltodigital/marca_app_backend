# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2017-12-26 09:42
from __future__ import unicode_literals

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
            ],
            options={
                'db_table': 'auth_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Cargo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=250)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('nivel', models.IntegerField()),
            ],
            options={
                'permissions': (('can_see_all', 'Ver todos'), ('can_see_owner', 'Solo los que creo')),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ContactoEmpresa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'permissions': (('can_see_all', 'Ver todos'), ('can_see_owner', 'Solo los que creo')),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Empresa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=250)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('rut', models.CharField(max_length=50, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_rut', message='Rut no valido', regex='[0-9]{10}[0-9]')])),
                ('field', models.CharField(max_length=100, unique=True)),
                ('direccion', models.CharField(max_length=255)),
                ('correoElectronico', models.EmailField(max_length=200)),
                ('telefono', models.CharField(max_length=100)),
                ('telefonoFijo', models.CharField(max_length=100)),
            ],
            options={
                'permissions': (('can_see_all', 'Ver todos'), ('can_see_owner', 'Solo los que creo')),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Estado',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=250)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('app', models.CharField(max_length=250)),
                ('color', models.CharField(blank=True, max_length=250)),
                ('icono', models.CharField(blank=True, max_length=250)),
                ('estado', models.BooleanField(default=1)),
                ('codigo', models.IntegerField(blank=True, null=True)),
                ('orden', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Municipio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=250)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'permissions': (('can_see_all', 'Ver todos'), ('can_see_owner', 'Solo los que creo')),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Pais',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=250)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('validaRut', models.CharField(max_length=50)),
            ],
            options={
                'permissions': (('can_see_all', 'Ver todos'), ('can_see_owner', 'Solo los que creo')),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Persona',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=250)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('rut', models.CharField(max_length=50, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_rut', message='Rut no valido', regex='[0-9]{10}[0-9]')])),
                ('primerApellido', models.CharField(max_length=100)),
                ('segundoApellido', models.CharField(max_length=100)),
                ('fechaNacimiento', models.DateField()),
                ('genero', models.CharField(choices=[('0', '[Seleccione...]'), ('1', 'Masculino'), ('2', 'Femenino')], default=0, max_length=1)),
                ('estadoCivil', models.CharField(default=0, max_length=1)),
                ('correoElectronico', models.EmailField(max_length=200)),
                ('telefono', models.CharField(max_length=100)),
                ('telefonoFijo', models.CharField(max_length=100)),
                ('municipio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametrizacion.Municipio')),
            ],
            options={
                'permissions': (('can_see_all', 'Ver todos'), ('can_see_owner', 'Solo los que creo')),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Proyecto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=250)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('descripcion', models.CharField(blank=True, max_length=255, null=True)),
                ('valorAdjudicado', models.FloatField()),
                ('latitud', models.FloatField()),
                ('longitud', models.FloatField()),
                ('fechaInicio', models.DateField(blank=True, null=True)),
                ('fechaFin', models.DateField(blank=True, null=True)),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametrizacion.Empresa')),
                ('estado', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='f_Estado_proyecto_estado', to='parametrizacion.Estado')),
                ('municipio', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='f_Municipio_parametrizacion', to='parametrizacion.Municipio')),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=250)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('pais', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametrizacion.Pais')),
            ],
            options={
                'permissions': (('can_see_all', 'Ver todos'), ('can_see_owner', 'Solo los que creo')),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tipo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=250)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('app', models.CharField(max_length=250)),
                ('color', models.CharField(blank=True, max_length=250)),
                ('codigo', models.IntegerField(blank=True, null=True)),
                ('icono', models.CharField(blank=True, max_length=200)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='tipo',
            unique_together=set([('app', 'codigo')]),
        ),
        migrations.AddField(
            model_name='proyecto',
            name='tipo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='f_P_tipo_proyecto', to='parametrizacion.Tipo'),
        ),
        migrations.AddField(
            model_name='municipio',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametrizacion.Region'),
        ),
        migrations.AlterUniqueTogether(
            name='estado',
            unique_together=set([('app', 'codigo')]),
        ),
        migrations.AddField(
            model_name='empresa',
            name='municipio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametrizacion.Municipio'),
        ),
        migrations.AddField(
            model_name='contactoempresa',
            name='empresa',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametrizacion.Empresa'),
        ),
        migrations.AddField(
            model_name='contactoempresa',
            name='persona',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametrizacion.Persona'),
        ),
        migrations.AddField(
            model_name='cargo',
            name='cliente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametrizacion.Empresa'),
        ),
        migrations.AddField(
            model_name='user',
            name='cargo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='parametrizacion.Cargo'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='persona',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='parametrizacion.Persona'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AlterUniqueTogether(
            name='proyecto',
            unique_together=set([('nombre', 'empresa')]),
        ),
    ]
